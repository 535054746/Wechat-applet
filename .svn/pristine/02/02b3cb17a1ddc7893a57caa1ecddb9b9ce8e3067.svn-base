// pages/shop/shop.js
var host = require('../../utils/http.js')
const app = getApp();
var ajax = require('../../utils/requestUtil.js')

Page({
  /**
   * 页面的初始数据
   */
  data: {
    list: [],
    status: true,
    newlist: [],
    carlist: [],
    wheight: 0,
    itemData: '',
    crr: ''
  },

  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function (options) {
    var than = this
    // than.shopData();
    than.shopfeulei()
    wx.getSystemInfo({
      success: function(res) {
        than.setData({
          wheight: res.windowHeight
        })
      },
    })
    wx.setStorageSync('newlist', than.data.newlist)
  },
  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  shopfeulei() {
    var than = this
    wx.request({
      url: host.host +'/sz-api/member/mallItemProgram/findMallItemProgramCategory',
      header: {
        eid: '91177C216DF1488F945B116E6933F97F'
      },
      data: {
        id: '19'
      },
      method: 'POST',
      success(res) {
        than.setData({
          itemData: res.data.data
        })
        console.log(res.data.data)
      }
    })
  },

  // shopData:function() {
  //   var than = this
  //   wx.request({
  //     url: host.host +'/sz-api/member/mallItemProgram/findMallItemProgramDetails',
  //     header: {
  //       eid: '91177C216DF1488F945B116E6933F97F'
  //     },
  //     method: 'POST',
  //     data: {
  //       id: '19',
  //       // categoryId: 
  //     },
  //       success(res) {
  //       res.data.data.forEach(item => {
  //         item.count = 0;
  //         item.isSelect = false
  //       })
  //       than.setData({
  //         list: res.data.data
  //       })
  //     }
  //   })
  // },

  leftNav: function(e) {
    var than = this
    var leftId = e.currentTarget.dataset.index
    var id = e.currentTarget.dataset.id
      wx.request({
        url: host.host + '/sz-api/member/mallItemProgram/findMallItemProgramDetails',
        header: {
          eid: '91177C216DF1488F945B116E6933F97F'
        },
        method: 'POST',
        data: {
          id: '19',
          categoryId: id
        },
        success(res) {
          res.data.data.forEach(item => {
            item.count = 0;
            item.isSelect = false
          })
          than.setData({
            list: res.data.data
          })
        }
      })
    than.setData({
      crr: leftId
    })
  },

  add: function(e) {
    const index = e.currentTarget.dataset.index;
    let list = this.data.list;
    let count = list[index].count;
    count = count + 1;
    list[index].count = count;
    this.setData({
      list: list
    });
  },


  sub: function (e) {
    const index = e.currentTarget.dataset.index;
    let list = this.data.list;
    let count = list[index].count;
    count = count - 1;
    list[index].count = count;
    this.setData({
      list: list
    });
  },

  bindIptCartNum: function (e) {
    const index = e.currentTarget.dataset.index;
    var num = e.detail.value;
    let list = this.data.list;
    list[index].count = num;
    this.setData({
      list: list
    });
  },


  onReady: function () {
  },

  /**
   * 生命周期函数--监听页面显示
   */
    
  onShow: function () {
    var than = this
    var newList = wx.getStorageSync('newlist')

    var list = wx.getStorageSync('list')
    console.log(list)
    var shopList = than.data.list;
    for(let i = 0;i<shopList.length;i++) {
      for(let j=0;j<list.length;j++) {
       if(shopList[i].id === list[j].id) {
         shopList[i].count = list[j].count;
         break
       } else {
         shopList[i].count = 0
       }
      }
    }
    than.setData({
      list: shopList,
      newlist: newList
    })
  },

  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide: function () {
    var than = this
    var carData = than.data.list
    var newlist = than.data.newlist
    for(var i = 0; i<carData.length; i++ ) {
      if(carData[i].count > 0) {
        // var crrid = newlist.find(item => item.id ==carData[i].id)
        // if(!crrid) {
          newlist.push(carData[i])
        // }
      }
    }
    wx.setStorageSync('newlist', newlist || [])
    than.data.newlist = []
  },

  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload: function () {

  },

  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh: function () {

  },

  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom: function () {

  },

  /**
   * 用户点击右上角分享
   */
  onShareAppMessage: function () {

  }
})